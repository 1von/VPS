🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸STAR🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸

❤️ STAR法则:  Situation Task Action Result
    • Situation    事情是在什么情况下发生
    • Task：       你是如何明确你的任务的
    • Action       针对这样的情况分析，你采用了什么行动方式
    • Result：     结果怎样，在这样的情况下你学习到了什么


❗️❗️STAR法则 就是一种讲述自己故事的方式，一个清晰、条理的作文模板; ❗️❗️
❗️❗️STAR法则 就是一种讲述自己故事的方式，一个清晰、条理的作文模板; ❗️❗️
❗️❗️STAR法则 就是一种讲述自己故事的方式，一个清晰、条理的作文模板; ❗️❗️

❗️❗️让面试者条理清晰、逻辑性强的描述自己, 让面试官在短时间内快速了解面试者.❗️❗️
❗️❗️让面试者条理清晰、逻辑性强的描述自己, 让面试官在短时间内快速了解面试者.❗️❗️
❗️❗️让面试者条理清晰、逻辑性强的描述自己, 让面试官在短时间内快速了解面试者.❗️❗️

🔸 STAR 用处
    你可以用在写简历工作经验/项目经验上.

    也可以在回答面试官提问的时候.

❗️❗️ 对于无法清晰的描述过往经历的人，通常会在简历上备注： 不推荐复试！❗️❗️


🔸 STAR Misc
    所以，写简历时就要准备好面试时的个人故事，以便应付各种千奇百怪的开放性问题。


🔸 挖掘闪光点
    面试肯定有开放性问题.
    其实每一个开放性问题都在考查自己的每一项能力，如领导能力，沟通能力，适应能力等等。
    而挖掘闪光点就是在这些事件模块中找出你所能体现的这些能力，
    比如你是怎么解决某个技术问题的.
    解决问题的思路也是一种优点.





🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸ITIL🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸






🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸

🔸 简历文件名 ✔︎
    语法: 姓名+应聘职位 
    如: 徐健 • DevOps.pdf


🔸 简历格式 ✔︎
    pdf 格式 > word 


🔸 一页原则  ✔︎
    一般6秒 会有个初步印象. 并决定是否提供面试机会.


🔸 字体、字号与字色 ✔︎
    字体：雅黑
    字号：标题12号，正文10 
    字色：黑色


🔸 排版 ✔︎
    简洁明了.逻辑结构清晰.
    干净整洁、没废话


🔸 语法检测 ✔︎
    HTML 是对的  html 是错的.




🔸 基本个人信息 ✔︎
    姓名,性别,年龄,学校,专业. 邮箱电话
    求职意向  必须有!



🔸 自我介绍  ✔︎
    职业规划
    个人定位
    个人优势
    个人劣势
    工作期望
    离职原因




🔸 简历加法项 ★★★★★  ✔︎
    • 你能胜任这份工作、你认真、你有上进心、
    • 你没有毛病（强调一下，这条最重要）。


🔸 简历加法项 ★★★★  ✔︎
    博客里面有技术文章、
    写博客会显得头脑非常清晰的知道自己在做什么。




🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸todo🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸

🔸 工作经验  






🔸 运维素质
    沟通能力! 团队协作.精力旺盛.




🔸 工作经历 & 项目经历
    做了什么.    解决了什么问题..
    STAR 法则来写. 



🔸 项目经验
    无关的不要写! 
    三个左右差不多了! 容易分散重点! 提高面试官的提问范围.



🔸 技术栈 
    不要写太多无关技术.
    面试的没事干会问你简历里的每一个内容! ...










　





🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸


🔸 Devops 重点 
    熟悉工具 + 脚本能力


🔸 工具

    持续:  jekins 
    自动化部署/配置管理 :  ★ puppet/ansible 
    监控: ★ zabbix 

8. 熟悉nginx/HAProxy/MySQL/监控报警等的运维；


5. 有网络信息安全的实战经验;


.熟悉SOA、微服务等架构，熟悉PaaS云平台架构、原理及其实现


6. 有自动化部署/配置管理经验，如Ansible/Chef/Puppet;

4.	熟悉zabbix监控管理工具,熟悉puppet/saltstack/ansible中的一种；




evOps其实包含了三个部分：开发、测试和运维。

DevOps突出重视软件开发人员和运维人员的沟通合作，通过自动化流程来使得软件构建、测试、发布更加快捷、频繁和可靠。



DevOps的一个巨大好处就是可以高效交付，这也正好是它的初衷。Puppet与 DevOps研究与评估（以下简称 DORA）协会主办的2016年DevOps调查报告中，根据全球4600位各IT公司的技术工作者的提交数据统计得出结论：高效公司平均每年可以完成1460次部署。与低效组织相比，高效组织的部署频繁200倍，产品投入使用速度快2555倍，服务恢复速度快24倍。

在工作内容的时间分配上，低效者要多花22%的时间用在为规划好或者重复工作上，而高效者却可以多花29%的时间用在新的工作上。所以这里的高效不仅仅指公司产出的效率提高，还指员工的工作质量得到提升。

DevOps另外一个好处就是会改善公司组织文化、提高员工的参与感。员工们变得更高效，也更有满足和成就感；调查显示高效员工的雇员净推荐值（eNPS:employee Net Promoter Score）更高，即对公司更加认同。

对于工程师而言，他们也是DevOps的受益者。微软资深工程师Scott Hanselman说过“对于开发者而言，最有力的工具就是自动化工具”（The most powerful tool we have as developers is automation）。工具链的打通使得开发者们在交付软件时可以完成生产环境的构建、测试和运行；正如Amazon的VP兼CTO Werner Vogels那句让人印象深刻的话：“谁开发谁运行”。（You build it, you run it）

作者：ServiceHot
链接：http://www.jianshu.com/p/688b3c66fc5d
來源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



早期时，大家虽然意识到了这个问题的，但是苦于当时没有完善丰富的技术工具，是一种“理想很丰满，但是现实很骨感”的情况。DevOps的实现可以基于新兴的容器技术，也可以在自动化运维工具Puppet、SaltStack、Ansible之后的延伸，还可以构建在传统的Cloud Foundry、OpenShift等PaaS厂商之上。

事实上，DevOps正在成为 IT行业的新标准，并且已经被业界广泛采纳，常见于云计算和容器技术。

同时，许多组织正尽力去理解 DevOps的全貌，这主要受限于他们专业知识上的缺乏和各种组织结构上的挑战。尽管面临这些挑战，DevOps还是渐渐成为一个主流运动，各个公司已经注意到DevOps加速发布的无限价值潜力：谁创新速度最快，谁频繁更新…谁就可能打通创新的任督二脉。DevOps正在改变着 IT组织发布软件的方式，这就像敏捷运动在过去十多年中所产生的影响。

作者：ServiceHot
链接：http://www.jianshu.com/p/688b3c66fc5d
來源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



开门见山，成为DevOps工程师的关键是关注以下几点。

1、零触摸式的自动化

你应该深刻了解下自动化，诸如基础设施配置，CI/CD管道，发布管理，安全补丁甚至客户反馈等所有内容的想法……这些可以让组织创新脚步更快：免去手工切换，并在引入后立即追踪并修复错误。

在这里就可以开始适度增加版本更新周期并获得客户的快速反馈，从而帮助您更快地改善产品和响应市场需求。这步可以带着你一直走向DevOps的最终涅磐。

DevOps交付管道的完全自动化，多去找找相关开源方案学习精髓之处吧，本文没什么捷径提供。

2、宽容度高的行动心态

开发在设计软件时多走一步，考虑一些常见的操作陷阱。这个环节如果开发环节就能注意到，那就非常好了，而不是遇到问题，然后才修复。

尝试通过创建一个作为设计评估模板一部分的清单来标准化这类过程。Microsoft有部分团队就总结了一些清单，其中考虑了部署和基础架构的要求。

坚信团结的力量。鼓励通过团建，跨团体游戏之类的形式相互认识。长久以往，可能会发现Slack渠道的沟通也不那么麻烦了，对每个人都开放包容，有助于更好地理解和对交叉团队的问题感同身受。

如何衡量DevOps的成功？

最终，您所有的努力都要转化为更快创新的业务目标。

DevOps策略成功的一些关键指标如下。

部署频率——部署到生产要多久？通过自动化，你可以随着每一个变化的生产进行持续部署。这是一个到达过程，每天至少一次作为目标并没有什么不妥。

代码更改的交付时间——将代码更改部署到生产中需要多久？这将衡量自动化管道的效率。目标：建议是不到30分钟，最好再结合自己实际情况调整。

回滚率——出错回滚频繁吗？这很可能意味着自动化流程需要改进，因为DevOps的整个目标是创建可预测且无错误的版本。如果回滚率高，那至少得提高回滚速度。这个是快速恢复的一个基本能力，把对业务的影响降到最低。

作者：ServiceHot
链接：http://www.jianshu.com/p/688b3c66fc5d
來源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。





采用DevOps的主要意图是在开发和运营团队之间建立更好的工作关系。有些建议是将团队安排在一起，将他们包含在彼此的流程和工作流程中，甚至创建一个能够完成任务的跨职能团队。不过在这种方式中，Dev仍然是Dev，Ops仍然是Ops。

DevOps工程师一词试图将Dev与Ops之间的差距模糊起来，并表示最好的方法是请一些可以搞定Dev角色以及处理所有Ops职能的工程师。简而言之，DevOps工程师可以是开发，主要是他们能通过运营的心态思考问题并具有以下技能：

1.❗️❗️❗️❗️ 熟练使用各种操作和自动化工具的经验；

2. ❗️❗️❗️❗️ 强大的脚本能力；

3. 在频繁测试和增量的时候从容不迫；

4. 了解Ops问题的来龙去脉，能在源头杜绝问题扩散；

5. 技能和逻辑相对开发更全面，让团队更好的协作。

作者：ServiceHot
链接：http://www.jianshu.com/p/688b3c66fc5d
來源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



Dev迁移到DevOps角色比以往任何时候都容易。交付自动化日益改善，DevOps平台通过最少的脚本轻松就能实现自动化。

Ops工程师能否迁移到DevOps角色？当然！但相对开发可能挑战更大一些，因为转换之前，严谨的编码技巧也得学习学习。不过编码启动阵营的变化，这可能相比几年前更容易过渡一些。

作者：ServiceHot
链接：http://www.jianshu.com/p/688b3c66fc5d
來源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。







🔸 运维阶段
    人工运维 ➜  自动化运维 ➜ 智能运维


🔸 运维

⦿ 系统监控 
⦿ 部署发布
⦿ 


部署是运维日常工作很重要的组成部分，是属于计划内的工作，重复度高，必须提升效率。




🔸 可运维性能


① 配置管理


② 版本管理



③ 标准操作
运维日常有大量重复度高的工作需要被执行，从精益思想的视角看，这里存在极大的浪费：学习成本、无价值操作、重复建设的脚本/工具、人肉执行的风险等等。

倘若能在企业内形成统一的运维操作规范，如文件传输、远程执行、应用启动停止等等操作都被规范化、集中化、一键化的操作，运维的效率和质量将得以极大的提升。

④ 进程管理
包括应用安装路径、目录结构、规范进程名、规范端口号、启停方式、监控方案等等，被收纳在进程管理的范畴。做好进程管理的全局规划，能够极大的提升自动化运维程度，减少计划外任务的发生。

⑤ 空间管理
做好磁盘空间使用的管理，是为了保证业务数据的有序存放，也是降低计划外任务发生的有效手段。

要求提前做好的规划：备份策略、存储方案、容量预警、清理策略等，辅以行之有效的工具，让这些任务不再困扰运维。




⑥ 日志管理
日志规范的推行和贯彻需要研发密切配合，在实践中得出的经验，运维理想中的日志规范要包含这些要求：

业务数据与日志分离
日志与业务逻辑解耦
日志格式统一
返回码及注释清晰
可获取业务指标（请求量/成功率/延时）
定义关键事件
输出级别
管理方案（存放时长、压缩备份等）
当具体上述条件的日志规范得以落地，开发、运维和业务都能相应的获得较好的监控分析能力。



⑦ 集中管控
运维的工作先天就容易被切割成不同的部分，发布变更、监控分析、故障处理、项目支持、多云管理等等，我们诉求一站式的运维管理平台，使得所有的工作信息能够衔接起来和传承经验，杜绝因为信息孤岛或人工传递信息而造成的运营风险，提升整体运维管控的效率和质量。





🔸 要点四：容错容灾
在腾讯技术运营（运维）的四大职责：质量、效率、成本、安全。质量是首要保障的阵地，转换成架构的视角，运维眼中理想的高可用架构架构设计应该包含以下几点：


① 负载均衡
无论是软件或硬件的负责均衡的方案，从运维的角度出发，我们总希望业务架构是无状态的，路由寻址是智能化的，集群容错是自动实现的。

在腾讯多年的路由软件实践中，软件的负载均衡方案被广泛应用，为业务架构实现高可用立下汗马功劳。

② 可调度性
在移动互联网盛行的年代，可调度性是容灾容错的一项极其重要的运维手段。在业务遭遇无法立刻解决的故障时，将用户或服务调离异常区域，是海量运营实践中屡试不爽的技巧，也是腾讯QQ和微信保障平台业务质量的核心运维能力之一。

结合域名、VIP、接入网关等技术，让架构支持调度的能力，丰富运维管理手段，有能力更从容的应对各种故障场景。

③ 异地多活
异地多活是数据高可用的诉求，是可调度性的前提。针对不同的业务场景，技术实现的手段不限。

腾讯社交的实践可以参考周小军老师的文章“2亿QQ用户大调度背后的架构设计和高效运营”。

④ 主从切换
在数据库的高可用方案中，主从切换是最常见的容灾容错方案。通过在业务逻辑中实现读写分离，再结合智能路由选择实现无人职守的主从切换自动化，无疑是架构设计对DBA最好的馈赠。

⑤ 柔性可用
“先扛住再优化”是腾讯海量运营思想之一，也为我们在做业务架构的高可用设计点明了方向。

如何在业务量突增的情况下，最大程度的保障业务可用？是做架构规划和设计时不可回避的问题。巧妙的设置柔性开关，或者在架构中内置自动拒绝超额请求的逻辑，能够在关键时刻保证后端服务不雪崩，确保业务架构的高可用。





要点五：质量监控

保障和提高业务质量是运维努力追逐的目标，而监控能力是我们实现目标的重要技术手段。运维希望架构为质量监控提供便利和数据支持，要求实现以下几点：


① 指标度量
每个架构都必须能被指标度量，同时，我们希望的是最好只有唯一的指标度量。对于业务日趋完善的立体化监控，监控指标的数量随之会成倍增长。因此，架构的指标度量，我们希望的是最好只有唯一的指标度量。

② 基础监控
指的是网络、专线、主机、系统等低层次的指标能力，这类监控点大多属于非侵入式，很容易实现数据的采集。

在自动化运维能力健全的企业，基础监控产生的告警数据绝大部分会被收敛掉。同时，这部分监控数据将为高层次的业务监控提供数据支撑和决策依据，或者被包装成更贴近上层应用场景的业务监控数据使用，如容量、多维指标等。

③ 组件监控
腾讯习惯把开发框架、路由服务、中间件等都统称为组件，这类监控介于基础监控和业务监控之间，运维常寄希望于在组件中内嵌监控逻辑，通过组件的推广，让组件监控的覆盖度提高，获取数据的成本属中等。如利用路由组件的监控，运维可以获得每个路由服务的请求量、延时等状态和质量指标。

④ 业务监控
业务监控的实现方法分主动和被动的监控，即可侵入式实现，又能以旁路的方式达到目的。这类监控方案要求开发的配合，与编码和架构相关。

通常业务监控的指标都能归纳为请求量、成功率、延时3种指标。实现手段很多，有日志监控、流数据监控、波测等等，业务监控属于高层次的监控，往往能直接反馈业务问题，但倘若要深入分析出问题的根源，就必须结合必要的运维监控管理规范，如返回码定义、日志协议等。需要业务架构在设计时，前置考虑运维监控管理的诉求，全局规划好的范畴。

⑤ 全链路监控
基础、组件、业务的监控手段更多的是聚焦于点的监控，在分布式架构的业务场景中，要做好监控，我们必须要考虑到服务请求链路的监控。

基于唯一的交易ID或RPC的调用关系，通过技术手段还原调用关系链，再通过模型或事件触发监控告警，来反馈服务链路的状态和质量。该监控手段属于监控的高阶应用，同样需要业务架构规划时做好前置规划和代码埋点。。

⑥ 质量考核
任何监控能力的推进，质量的优化，都需要有管理的闭环，考核是一个不错的手段，从监控覆盖率、指标全面性、事件管理机制到报表考核打分，运维和开发可以携手打造一个持续反馈的质量管理闭环，让业务架构能够不断进化提升。








本文纯属个人以运维视角整理的对微服务架构设计的一些愚见，要实现运维价值最大化，要确保业务质量、效率、成本的全面提高，业务架构这块硬骨头是不得不啃的。

运维人需要有架构意识，能站在不同角度对业务架构提出建议或需求，这也是DevOps 精神所提倡的，开发和运维联手，持续优化出最好的业务架构。









两个简历 . 一个 PDF 一个Web 

🔸 Web 简历备份:
    就是一些文件而已.  用github.  rsync
    由于网站在Centos服务器上.没有视图界面! 只能用Git 命令行了



🔸 Why DevOps 

    传统运维地位是不如开发的 
    现在 DevOp 却比开发待遇好 
    框架搭好之后，几百台是一样管的



🔸 DevOps 背景要求

    实际的开发测试经验.
    运维/IT管理/数据中心.
    强调自己的系统管理与工作流自动化，配置管理和发布管理经验。





🔸 DevOps 核心
    敏捷与迭代
    持续集成和部署
    聊天运营和配置管理
    GitHub、QA和发布管理





🔸 ITIL 
    以前流行通过ITIL，通过流程的理念来管理IT系统。

    现在大家都讲DEVOPS，提研发、测试和运维的协同。以前ITIL讲分工，发布就是运维的责任，现在DEVOPS强调协同，发布就都让研发去做了。

    这样很合理，因为程序发布这事你让运维去负责，其实大部分情况下出了问题运维根本识别不出来，你说别人写的代码到底有没有问题我怎么知道，真出了问题，耽误了时间，最后事情还是得交由开发来定位和处理。

而DEVOPS重视的就是高效，整个团队协同去处理这个事情，什么样的模式或什么样的人去做这个事情会变得更高效，谁就是第一责任人，我们就让他去负责，这样团队的流转就更高效和科学了。这是理念上的一些变革。

对应这些变革，运维人员的能力要求也有所变化。以前我们搬搬服务器，写个脚本什么的就可以了。但是随着技术和管理理念的变化，现在不一样了，运维也要开始写代码了，JAVA、PYTHON、C++什么的。

运维在公司的角色定位也不太一样了，以前就只是任务实施，现在慢慢朝平台建设，甚至朝运营分析方向转变。我们不但要有能力写代码还得有能力和研发一起讨论架构，和产品进行运营沟通。

真要想把运维做好，你要学的东西太多了。对于各种新技术的学习、应用和融合，如果说每个公司或每个运维都要去重头开始琢磨，那成本会非常大，对人的要求也会非常高。




🔸 DevOps 工具 


DevOps涉及到编码、测试、部署与加固等环节。工具是否合适取决于团队规模以及组织专业化程度。


软件配置管理和版本/发布(版本控制)巩固，包括Apache Subversion、Mercurial、Fossil等等，可以完善文档变更请求。当软件变更时，开发者可以更容易遵循公司的最佳实践与策略。

持续集成(CI)工具如Rational Build Forge、Jenkins和Semaphore能整合所有开发者的工作代码拷贝到一个集中版本。
这些工具适用于更大型的团队，其中的开发者们同时工作于相同的代码库上。


QA专家使用代码分析工具来测试软件的错误、安全和性能。如果你已经使用过HP的Fortify Static Code Analyzer，可以说说它是如何发现代码语言中潜在的安全风险。同样可以聊聊 GrammaTech的CodeSonar工具，如何使用它来定位内存泄漏、缓存欠载以及其他C/C++和Java代码的检查。

你需要掌握主语言命令——Ruby、C#、.NET、Perl、Python、Java、PHP、Windows PowerShell——并且能够在相关的操作系统环境下使用——Windows、Linux和Unix。



🔸 云经验

你有多少基于云的软件开发?
预计下一阶段的DevOps面试问题将问及你在云服务上的经验，可能涉及到DevOps的迭代、IT集成经验。
许多DevOps专家需要拥有与主要云服务提供商，如亚马逊网络服务(AWS)弹性计算云和谷歌云平台的经验。
分析你身边使用云平台的知识、提供新实例、编写新的软件以及通过云提供商的API或软件开发工具包来配置集群扩展计算能力，管理工作负载生命周期等。
这是一个讨论如何用基于容器的云来替代传统虚拟机的好时机。
基于事件的云如AWS Lambda提供另外一种软件开发方法，对有经验的DevOps候选者来说是个福音。
强调对第三方工具的全面了解能把DevOps带到云项目。专注于使用云，而不是刚上市的一次性成功项目或任务。
在面试时，谈及自己在处理大数据时的经验，以及如何采用云基础设施架构提高它的扩展性，以处理复杂的计算任务。




而且DevOps角色的职位描述通常还十分注重熟悉业务，在监管行业还会要求候选人熟悉ITIL实践。









🔸 QA 

DevOps结合了软件编码知识与质量保证(QA)技能，还有业务工作流程软件的持续开发以及部署。未来的开发者必须证明自己拥有足够的技能与知识来参与和管理DevOps组织。






🔸 DevOps 是什么

    ❗️❗️ devops 每个团队每个人都有各自的看法 ❗️❗️
    ❗️❗️ devops 每个团队每个人都有各自的看法 ❗️❗️


在很多传统的技术公司／政府／银行， developer 是不能操作 production server 的，甚至连 read-only 都不可以。 
在这样的公司里， 不是一天发布几次的问题，而是一个月发布几次的问题，
因为 developer 的一个修改可能需要牵扯到很多不同的团队， 譬如 dba ， system admin ， operation ／ support ，
虽然只是改了一行代码，但可能需要跟一堆人扯很多蛋 这样的流程让人痛苦。
但为了控制风险等原因，不得不存在，尤其是在金融行业里。


但是像 Facebook ， stackowerflow 这些公司，他们一天要 deploy 很多次。 

其实在面试的时候碰到不懂／不太了解的概念很正常，毕竟这年头炒作的东西太多， 你可以告诉他们你不了解，然后要求对方给你解释一下，同时也可以让他们给你更具体的职位描述，毕竟工作是双向选择的。 






就是很擅长写代码的运维....目标就是用一大堆的自动化脚本或者工具完全自动化的运维. 

实现的结果就是类似 AWS 那种用户点一下就能在后台跑一堆东西然后过一会就能拿到想要的虚机等等....





🔸 HAProxy  Web 高可用
    给基于TCP（第四层）和HTTP（第七层）的程序提供高可用、负载均衡和代理服务的解决方案，
    一般用在 web 站点上,和 mysql 数据库.


🔸 ProxySQL  数据库高可用.








🔸 DevOps 企业要求


3. 熟悉常见应用配置及优化，如Nginx/MongoDB/Redis/HaProxy等；

4. 熟悉Puppet、Ansible、Jenkins、Git、gitLab等工具；

5. 有flume、kafka、storm、hbase相关经验优先；





6. 有资产管理平台、自动构建及部署系统、配置管理系统、监控报警平台等有实际建设经验者优先。










让我们谈谈你的教育和经验
突出强调你对DevOps原理的理解，并向面试官展示你的背景以及如何准备担任这个角色。
DevOps的职责范围各不相同，但大多数入门级DevOps角色需要具有计算机科学的学士学位或者相关领域经验，包括编码、QA测试以及IT基础设施组件等。更高级别的DevOps角色可能需要在系统架构与软件设计上的高级学位。
谈及你在虚拟化方面的认证，云计算和具体的编程语言。还有供应商提供的e-learning软件开发工具，如代码分析工具或系统管理与自动化工具，可以更完整的展现你的专业知识。
比较DevOps的招聘职位和你的简历。大多数入门级DevOps相关职位要求三到五年的代码开发与测试经验。DevOps涉及操作和部署，可能会要求至少四年的运营经验，例如在数据中心或云基础架构领域的IT系统管理工作。强调自己的系统管理与工作流自动化，配置管理和发布管理经验。
DevOps依赖于开发、测试与运营团队之间密切的合作关系，任何科学的管理后台经验都是值得在面试中分享的。让潜在雇主了解你如何让不同的团队客服障碍，共同努力，保持严格的发布计划，并适应新的工具与技术。
面试DevOps职位前必须牢记下列信息
敏捷与迭代
持续集成和部署
聊天运营和配置管理
GitHub、QA和发布管理
你的系统背景如何
DevOps专家需要在服务器和系统上具备运营经验，包括部署能够支持负载的网络硬件与架构部署。
一些DevOps工作需要额外的系统知识，包括服务器集群与高并发系统。在这个级别，DevOps工程师需要分析系统可用性并部署升级来提升效率、可扩展性与可用性或者弹性。需要具备坚实的操作系统与支撑技能，如网络安全、VPN和代理服务器配置。
DevOps依赖于虚拟化进行快速工作负载提供——为新虚拟机提供计算资源以支持下一次部署——所以需要对主要的虚拟化管理平台有详细了解。这包括备份、迁移以及生命周期管理策略，以便保护、优化与恢复计算资源。一些环境可能还很重视针对虚拟容器开发的微服务软件开发。
运营专家必须包括额外的系统管理工具知识，如Microsoft System Center、Puppet、Nagios和Chef。DevOps工作十分重视运营能力，如解决问题、故障处理和分析技能。
分享一些你是如何在节约开销的同时提升利用率，如服务器整合项目或资源分配与性能监控经验。
你正在使用哪些DevOps工具?
DevOps涉及到编码、测试、部署与加固等环节。工具是否合适取决于团队规模以及组织专业化程度。
软件配置管理和版本/发布(版本控制)巩固，包括Apache Subversion、Mercurial、Fossil等等，可以完善文档变更请求。当软件变更时，开发者可以更容易遵循公司的最佳实践与策略。
持续集成(CI)工具如Rational Build Forge、Jenkins和Semaphore能整合所有开发者的工作代码拷贝到一个集中版本。这些工具适用于更大型的团队，其中的开发者们同时工作于相同的代码库上。
QA专家使用代码分析工具来测试软件的错误、安全和性能。如果你已经使用过HP的Fortify Static Code Analyzer，可以说说它是如何发现代码语言中潜在的安全风险。同样可以聊聊 GrammaTech的CodeSonar工具，如何使用它来定位内存泄漏、缓存欠载以及其他C/C++和Java代码的检查。
你需要掌握主语言命令——Ruby、C#、.NET、Perl、Python、Java、PHP、Windows PowerShell——并且能够在相关的操作系统环境下使用——Windows、Linux和Unix。
你有多少基于云的软件开发?
预计下一阶段的DevOps面试问题将问及你在云服务上的经验，可能涉及到DevOps的迭代、IT集成经验。
许多DevOps专家需要拥有与主要云服务提供商，如亚马逊网络服务(AWS)弹性计算云和谷歌云平台的经验。分析你身边使用云平台的知识、提供新实例、编写新的软件以及通过云提供商的API或软件开发工具包来配置集群扩展计算能力，管理工作负载生命周期等。
这是一个讨论如何用基于容器的云来替代传统虚拟机的好时机。基于事件的云如AWS Lambda提供另外一种软件开发方法，对有经验的DevOps候选者来说是个福音。
强调对第三方工具的全面了解能把DevOps带到云项目。专注于使用云，而不是刚上市的一次性成功项目或任务。
在面试时，谈及自己在处理大数据时的经验，以及如何采用云基础设施架构提高它的扩展性，以处理复杂的计算任务。
谈谈你是如何具体管理接手的项目
强调自己置身于DevOps项目管理的问题中。框架化的围绕解决复杂的业务问题来讨论DevOps管理。
作为一名具有管理责任的专家，必须证明自己对DevOps项目管理策略有着清醒地认识。讨论你如何与团队制定目标、简化工作流程、维护范围(防止蠕变)，研究和推出新工具或框架，转换需求到工作流并跟进。包括如何配置管理与发布管理，还有采用其他工具来跟踪项目。
高级的DevOps角色，如首席DevOps工程师，需要更多商业头脑和人际交往能力。分享你如何解决纠纷与团队冲突的经验。
你还熟悉哪些工具可以帮助胜任这个角色?
这个DevOps面试问题可以真正提升你从“合格”到“理想人选”。
DevOps是如此的多元化与包容，它很少以编码、测试和系统结束。一个DevOps项目可能依赖于类似SQL或NoSQL的数据库平台，数据结构服务器如Redis或者配置与事件跟踪系统，如Redmine。
web应用程序是现代企业必备的，说明自己有Web服务器，如Microsoft Internet Information Services、Apache Tomcat 或其他Web服务器的应用背景。
遵循标准化方法来进行软件开发的组织都会寻找熟悉敏捷应用程序生命周期管理的技术人才与工具。
而且DevOps角色的职位描述通常还十分注重熟悉业务，在监管行业还会要求候选人熟悉ITIL实践。

















编程能力
PHP Shell Python Perl CSS & HTML jQuery Restful
相关技能
CentOS Ubuntu Apache Nginx  MySQL Postgres Redis Nagios Zabbix Cacti Statsd Grafana Strace Valgrind Postfix Bind Docker CoreOS Bamboo Jenkins Atlassian Products Git SVN Azure AWS Google Cloud









工作经验
2016-至今
高级DevOps工程师 Glu Mobile，游戏公司
代码化的基础架构管理方式，主要使用AWS作为项目交付平台。重度使用EC2、S3、RDS、Cloudformation等AWS组件。使用Ansible实现自动化管理服务器与应用服务。使用Ansible、puppet、Gitlab、Gitlab和Jenkins等工具来部署应用服务与云上基础设施。迁移腾讯的手游项目到AWS云平台，实现自动化部署；并使用Zabbix、Grafana、Kibana、Elasticsearch和Graphite进行监控与告警。
2014-2016
高级系统运维工程师 北京弥财，金融大数据创业公司
负责搭建与维护以Azure、Docker、CoreOS、Bamboo为基础的持续集成与交付平台。Zabbix监控系统的维护与插件的开发，ELK日志系统的维护，Jira、Confulence、Crowd、VPN、Google Apps for Work等服务的维护，并协助开发人员解决应用层、数据层问题。
2012-2014
Sysadmin、DevOps工程师 重庆易思通，自动化运维创业公司
重庆国土局数据中心系统与应用运维,负责基于Nagios的企业运维监控平台的设计与开发, 使用PHP与Bootstrap 开发管理界面。并使用Perl、Python开发监控插件,比如:
服务器性能相关指标
Web应用的健康状态与性能
⺴络设备流量、CPU、连接数
数据中心基础设施:空调、UPS、温度、湿度
运维预案管理、资产管理工具
数据中心值班、问题跟踪工具
重庆国土局Oracle数据库集群的管理，IBM小型机、AIX系统管理。
2008-2012
系统运维工程师 重庆拓扣，互联网彩票创业公司
负责电子商务⺴站的系统架构、运维与应用安全。优化应用与数据库。使用Nagios搭建监控平台对服务器与应用进行监控。使用OpenStack搭建本地开发、测试环境。
2005-2008
应用开发工程师 天府热线，四川电信子公司
基于LAMP的多用户博客系统开发,并负责该系统的服务器运维工作。使用Nagios与Cacti进行服务器与⺴络的监控。
职业认证
2010
Oracle 10g OCP 原厂培训
进行为期一年的培训,获得OCP证书。
兴趣爱好
OpenSource、Linux、Yii框架、Bootstrap、开发Web应用、Nagios、学无止境!





















🔸 价值
    • 知识  可以通过网络获取.TCP/IP 协议. HTTP
    • 技能  完成某种任务的能力.  如软件开发.
    • 经历
    • 天赋
    • 人脉



    知识、技能、经历 差不多的模板. 千人一面!


    知识会淡忘，一段时间不用就扔掉了，所以在你的知识图谱里，一定有一些是你经常使用的，Linux、脚本.


🔸 我的知识
    HTML、CSS、JS、Bootstrap、SASS、ES6、Webpack、SEO、JSON、node.js 

    HTTP、TCP/IP、VLAN、

    Linux 

    shell、python、MySQL、MongoDB、Postgresql、


    ❗️❗️ 我们需要把自己最熟悉的三种知识标注出来，后面会派上用场。


🔸 梳理知识和技能.
    ❗️❗️ 每个人都有很多知识和技能，一定要找出你擅长的2~3种知识，2~3种技能，这将是你求职时的重要参考。
    ❗️❗️ 每个人都有很多知识和技能，一定要找出你擅长的2~3种知识，2~3种技能，这将是你求职时的重要参考。
    ❗️❗️ 每个人都有很多知识和技能，一定要找出你擅长的2~3种知识，2~3种技能，这将是你求职时的重要参考。

    人只有使用最擅长的技能去做事情，才能达到最好的效果。
    也就是说你找的工作要和你最擅长的技能有关. 这样通过率才高.


🔸 我的技能
    各种环境搭建
    用 jekyll 搭建 静态网站.
    用 DjangoCMS 搭建动态网站.
    个人网站运营




🔸 经历
    积累知识和技能的过程就叫经历.

    程序员的（学习、工作、项目）经历同样具有非常独特的价值，在求职过程中往往会发挥非常重要的作用。
    比如你做过视频项目，那再找类似做视频的公司就很容易脱颖而出；
    比如你做过图像处理相关的项目，进入美图秀秀之类的公司就相对容易……



        你负责的工作内容
        用到的知识、技能
        你对整个项目的贡献（最好可以量化）



🔸 项目经历 1

    【SSR 翻墙平台搭建】
    项目描述：
        购买3个VPS,自建翻墙服务器集群,方便自己和朋友.

    业绩：
        稳定运行半年, 注册用户300+

    职责：
    　　负责SS-panel前端、SSR后端的搭建已经维护.
    　　使用 Mysql主主热备 + proxysql 读写分离 实现高可用高性能.
        使用 BBR 进行网络加速, 提升翻墙体验.　　




    我没有列出前面所说三点对应的所有内容，个人亮点也没完全写出来，
    但你的心里一定要清楚，你发挥了什么关键作用，
    如果有攻克技术难点的经历和明显可以量化的业绩，一定要总结出来，面试时经常会被问到哦。






🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸   确立求职目标  🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸
找工作时都要忌讳一点：茫无目的，漫天撒网。

🔸 职业延续性
    跳一次槽换一个行业，跳一次槽换一条技术栈，这样极其不利于程序员的商业价值积累（知识、技能、业务等）。
    假如你不是第一次求职，就有必要考虑职业延续性。


🔸 成就事件挖掘职业兴趣
    在我们总结整理自己的工作、项目经历时，要特别留意那些让你特别有成就感的事件，它里面隐藏你的职业兴趣，可以挖掘出你今后乐意从事的职业方向。

    我们可以遵循STAR原则来回顾成就事件：

    S（Situation），背景情况，包括面临的障碍、限制或困难
    T（Task），任务，目标，想完成的事情
    A（Action），行动计划与步骤，如何克服障碍、达成目标
    R（Result），对结果的描述，重点关注你取得了什么成就

    通过这样的分析，你就可能找到自己的最佳技能和工作中最在意的点在哪里，就可以根据他们来确立新的职业目标。


🔸 聚焦行业、企业、职业

    聚焦的目的是缩小目标范围，节省时间和精力，
    深入研究分析，有针对性的对自己的商业价值进行优化组合，提高简历的吸引力，最后提升获取面试机会的概率。


    程序员 用技术针开发出对某个领域的软件.
    软件必然和目标需求 和 业务 密不可分.
    所以，程序员左手技术，右手业务，假如你对业务内容完全不感兴趣，很难想象你可以把软件做好
    因此，当你有了目标产业，目标公司，还要去了解这家公司做什么产品，是产品导向的公司，还是项目导向，还是外包为主，
    选择那家你对它的业务范围感兴趣的公司，不感兴趣的就果断筛掉。


    ❗️❗️❗️ 但有一个基本的原则，离夕阳产业和走下坡路的企业远点儿。❗️❗️❗️
    ❗️❗️❗️ 但有一个基本的原则，离夕阳产业和走下坡路的企业远点儿。❗️❗️❗️
    ❗️❗️❗️ 但有一个基本的原则，离夕阳产业和走下坡路的企业远点儿。❗️❗️❗️



    ⦿ 自我分析.
        会前端.会后端.会网络. 但是没有一个精通的.
        学过黑客技术. 也学过 IOS 开发.
        其实对devops 兴趣不是很大. 对网络安全技术更有兴趣.

        职业: 我锁定的第一个目标是 DEVOPS ，安全开发工程师.
        行业: 互联网
        企业: 之前都在小公司摸爬滚打，现在希望到比较大一点的公司里体验一下不同的工作氛围。


    ⦿ 劣势
        在锁定职位的过程中，还要考虑自己当前的劣势，以便在简历和面试过程中妥善应对。
        以我为例，如果找软件开发工作，就有两个不好的点：

        最近一年没做什么开发工作，会被人质疑廉颇老矣尚能饭否
        最近几年都在做技术管理工作，别人可能会奇怪你为什么倒回去做开发
        这两点也会影响到目标职位的选择和匹配度，比如有的高级开发工程师职位要求有一定团队管理经验，那和我的匹配度就高一些。







🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸   【03】简历优化实操  🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸🔸

🔸 简历优化要点：

    • 分析招聘信息，提取知识、技能、职责当中的关键词
    • 根据招聘信息里的关键词，筛选个人知识、技能、经历
    • 将匹配到的知识、技能、经历重新组织、呈现



职位:devops、经验:1-3年、薪资:15+

1、熟悉Centos，能够定位故障并处理；
4、熟悉自动化运维工具puppet等
5、了解主流虚拟化、分布式文件系统，并有实施经验。
6、熟悉至少一种脚本语言(Shell、Perl、Python皆可)；

7、熟练掌握Nginx、APACHE、php、Fastcgi、memcached、mysql、

HAproxy、mfs, redis，等常用软件的安装,配置和管理；


熟悉mysql数据库的部署管理和相关参数的优化。
8、熟悉zabbix、Cacti等运维监控的安装、配置;
9、了解网络原理，熟悉网络相关配置;
12、有aws相关DevOps工作经验，优先录用。

3.熟悉SQL Server数据库，熟悉数据库镜像、发布订阅等高可用方案熟练使用Shell，Python4.熟悉常用的开源软件（如：nginx，redis，mysql，mongodb，zabbix，zookeeper,consul，Ansible，ELK等）；
4.具有强大的学习意愿和学习能力，有意愿往DevOps方向发展；
5.具有积极的工作态度、较强的逻辑分析能力、独立思考判断问题的能力，能够很好地与团队成员沟通。

3、了解MySQL数据库开发，熟悉SQL语句；

6、具备好奇心和非常强的学习能力；有较强的逻辑思维能力和沟通能力；具有良好的团队合作精神，责任感强并能承受工作压力。


Redis

2.熟悉Linux操作系统，计算机网络等，基础知识扎实 

3.熟悉LNMP环境,配置,管理和排错

5.有良好的时间观念，能很好的沟通交流，乐于分享 

6.了解或熟悉ELK,Jenkins,Zabbix,Dubbo,MySQL,XenServer优先.
7.Linux系统下熟练使用golang或Python优先

－熟悉Linux操作系统,以及KVM、Xen、Docker等虚拟化/容器技术;

－熟悉Jenkins、Grafana、ELK、Zabbix、Ansible等开源系统的使用;
－熟悉或使用过MongoDB、HBase等NoSQL技术者更好；
－对技术有热情，关注开源技术，有实际开业项目经验者优先；

3.了解MySQL，mongodb,redis等数据库；

4.了解DevOps的概念，能够熟练使用BASH、Python脚本；






网络安全:
4、熟悉大容量数据库程序开发，熟悉mysql/mongodb/oracle/redis任一种以上的数据库

具有数据挖掘、爬虫、WEB开发等经验优先。


熟悉运维和发布流程优先。

熟悉docker管理，有docker项目经验优先。

搭建过高并发、开发过分布式系统优先。

有网络安全基础优先。

具备全栈和devpos理念优先。

2. 熟悉网络安全技术：包括端口、服务漏洞扫描，程序漏洞扫描分析检测、权限管理、入侵和攻击分析追踪、病毒木马防范等；
3. 具备对风险进行识别、评估、定性/定量分析，以及设计应对措施的能力 ；

6、熟悉主流的Web安全技术，包括SQL注入、XSS、CSRF等常见的安全漏洞利用； 

7、熟悉相关网络安全产品，如防火墙、IDS、防病毒，漏洞评估工具等； 

8、熟悉常见攻击和防御办法，熟悉web/移动安全和渗透技术,能自行进行web渗透测试，恶意代码监测和分析； 


2.熟悉网络安全领域相关知识，熟悉系统漏洞/WEB漏洞的原理和相关知识背景；
7.熟悉网络知识，各网络协议。
2. 精通TCP/IP 等网络协议，熟悉应用层协议，及协议分析。
3. 熟悉网络安全协议及路由器、交换机、防火墙等安全设备。
4. 熟悉主流防火墙、IPS、VPN、WAF、防数据泄漏、入侵检测、攻防技术、漏洞扫描、入侵防御、防病毒
5、认证、审计等信息安全技术,网络攻击、系统加固等安全技术者优先。














做个 好看的 web 简历装逼用.

cv.0214.help

格式:  word + PDF + web 版本.




联系方式
个人信息
工作经历
项目作品

技能清单







参考简历: 

★★★★★★★★★★ http://cv.heeroluo.net/




★★★★★ http://natee.github.io/




★★★★★ http://fenav.com/jianli/





http://html.love/






⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
简历1
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️



lnmp vhost add   resume.0214.help
================================================
Virtualhost infomation:
Your domain: resume.0214.help
Home Directory: /home/wwwroot/resume.0214.help
Rewrite: none
Enable log: no
Create database: no
Create ftp account: no
================================================

cd /home/wwwroot/resume.0214.help
    wget http://cv.heeroluo.net/ && ls

mkdir css && cd css
    wget http://cv.heeroluo.net/css/style-v2.5-print.css && ls
    wget http://cv.heeroluo.net/css/style-v2.5.css && ls



⦿ 域名解析.

⦿ 查看 resume.0214.help 配置文件
    ls /usr/local/nginx/conf/vhost

⦿ 查看默认配置文件
    vi /usr/local/nginx/conf/nginx.conf

⦿ 重启 Nginx
    sudo /etc/init.d/nginx restart

⦿ 浏览器测试  resume.0214.help
    现在内容有了 css 也正常. 修改内容就可以了.!!

还有图片....









⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️
简历2
⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️------⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️⬛️

http://fenav.com/jianli/

代码:  github https://github.com/lengziyu/resume





🔸 域名解析 
    cv.0214.help ➜ 35.194.128.92


🔸 Nginx 配置文件创建
    ================================================
    Virtualhost infomation:
    Your domain: cv.0214.help
    Home Directory: /home/wwwroot/cv.0214.help
    Rewrite: none
    Enable log: no
    Create database: no
    Create ftp account: no
    ================================================


🔸 重启nginx
    sudo /etc/init.d/nginx restart




🔸 扒站神器 (Mac sitesucker)
    打开软件. 填入网址 点击下载
    然后整个网站就下好了.. 当然有些文件可能下载错误. 暂时不管.
    我们只需要把 jianli 这个文件夹里面的所有内容 上传到服务器上就可以了.

    👁‍🗨 wget 也是很强大的. 可以下载整个网站的!!!!! 这里不深入了..



🔸 手动下载: 
    丫的.它的文件夹名字中居然有/  就像js/libs 文件夹.脑残啊.
    这就导致错误了!  我们删除它的js文件夹.自己下.

    cd /home/wwwroot/cv.0214.help/
    
    wget http://fenav.com/jianli/src/js/bulid/main.js -P /home/wwwroot/cv.0214.help/jianli/src/js/bulid

    wget http://fenav.com/jianli/src/js/libs/require.js -P /home/wwwroot/cv.0214.help/jianli/src/js/libs

    wget http://fenav.com/jianli/src/js/libs/jquery-1.11.3.min.js -P /home/wwwroot/cv.0214.help/jianli/src/js/libs

    wget http://fenav.com/jianli/src/js/comp/fullpage.js -P /home/wwwroot/cv.0214.help/jianli/src/js/comp
    wget http://fenav.com/jianli/src/js/comp/materialize.min.js -P /home/wwwroot/cv.0214.help/jianli/src/js/comp



   👁‍🗨 wget
        -P 表示下载到哪个目录
        -O 大小的字母. 表示重命名


🔸 浏览器测试   cv.0214.help/jianli




🔸 网页修改.
    直接改 .... index.html 源码就可以了..




🔸 网站全套图标
    http://realfavicongenerator.net/
















## 面试必知点


面试官一般是: 小组长 + 用人部门领导 + HR

‼️ 不要在意结果，不要把自己摆在弱势!来取得对方好感. 就当是和人聊天了. 展示好自己就行了。 ‼️
‼️ 不要在意结果，不要把自己摆在弱势!来取得对方好感. 就当是和人聊天了. 展示好自己就行了。 


‼️千万不要就某个问题和面试官理论啊,不要试图证明他或她是错的。‼️
'' 因为他们就是玩人的！就是来伤害你来满足自己的存在感的！
'' 关键看你的才能，能给公司带来什么.

‼️不要和HR之外的面试官讨论薪水.‼️
‼️不要问面试官 自己是否过了面试‼️

‼️祝你赢得光彩，输得有尊严。‼️
'' 问了10分钟工作经历后不说匹配，胜算肯定是没有了，但是，我坚持说，
'' 一，你们明明有我详细简历，终面面试者事先看都不看一遍就通知我过来，这种行为很不负责；
'' 
'' 二，我从图书馆过来，花了10个小时 你却只给我10分钟，我很失望。
'' 
'' 对方立即换了表情，诚恳道歉，跟我解释不合适在哪里.
'' 并且用了另外15分钟教我，根据我的条件和现有水平，还有哪些地方需要提高。
'' 我想用这个栗子告诉你，你会因为你所处的场合和既有的行为产生一定权利，面试官必然会尊重。



‼️三个问题 搞定一切面试‼️
1. 你能干这份工作么.      （优势） 
2. 你热爱这份工作么.          （动机）
3. 我能忍受和你一起工作么.（匹配度） 

无论对方提的是什么问题.都先判断是上面哪种问题.
既然面试答案基本离不开这三种.那么就应该提前准备好答案.



1. ❗️你能干这份工作么? / 你的优势在哪 ❗️
第一个答案：请举出三个有关态势/行动/成效的例子，说明你在面试官最关心的领域具备什么样的优势。 

开发: 从零开始建立的静态网站. 我相信这水平肯定入门了.
shell脚本: 能监控电脑状态,  还能发送GPS定位到手机.
	支持邮箱. 短信, imessage 多种方式.



2. ❗️你热爱这份工作吗？或有可能问：你希望做什么呢？（动机）❗️ 
第二个答案：根据你的价值和你的喜好定位你打算申请的岗位。 

3. ❗️我能忍受和你一起共事吗？或有可能问：你属于哪种类型的人？（匹配度）❗️ 
第三个答案：根据你的价值以及你喜欢共事的人定位你正在面试的组织。 




在回答问题时，你当然要以相应的答案为主线，但也可以转移到其他的答案。
‼️无论是什么话题，经验老到的候选人都能够在不经意之间将内容转移到他们想要表达的关键点上。‼️
‼️而他们想表达的关键点无非是为了说明自己是岗位的完美人选。‼️
‼️你希望谈谈自己的优势、动机和匹配度，然而你又不希望说得这么直接、明显，或是暴露你的策略。
‼️我们也不建议你这么做。把这种策略看做是一种密码。 



这种策略的高明之处在于，无论面试官的水平高低，他们永远不知道你在运用这种策略，且你的回答给他们留下深刻印象。
掌握了这种面试密码后，你就能很好地控制面试的进程。
在面试过程中，你就可以破解面试官提问背后的真正问题，主导面试的进程，而不会被对方牵着鼻子走。 




如: 
❗️“请介绍一下你自己。”千万不要搞错了，这是一个关于优势的提问，❗️
你的回答应该重点介绍自己的优势。对于这个虽然貌似普通，却有点令人发憷的开放式问题，
我们在回答时可以同时使用三种答案。
寒暄聊天过后，你将有一段自由发挥的时间。
准备好，以你的优势为切入点主导面试进程，让面试官在不知不觉中给你机会介绍自己的动机和匹配度。






❗️你对我们了解有多少❗️
”这则是一个关于动机的提问。事先做些准备，向他们证明你对组织的在意程度。
你应该充分了解或推测组织的现状，并根据组织的现状来谈你的优势和匹配度。 

拿冠军的田径运动员知道早在发令枪鸣响之前竞争就已经开始了。尽管这在体育界已是老生常谈不是什么秘密了，然而在商界还几乎无人知晓。管理者，尤其是那些第一次走进新公司的管理者，能够充分利用入职流程前期阶段的人更是少之又少。 




如何从众多面试者中脱颖而出!
‼️通过对自身优势 和 动机的展示.自然而然地将话题转向自身的匹配度。‼️
吸引了 多个面试官的眼球, 让面试官有倾向的影响了面试流程!!!
靠运气...靠颜值.. 最重要的是技能!!!

优秀的候选人能激发面试官的兴趣. 更有效的推销自己.
如何激发面试官兴趣.
介绍自己时 胸有成竹. 对专业驾轻就熟.
优秀的候选人是在享受面试.

有备而来, 胸有成竹的说话, 让人感觉你身上充满了可能性和机会.

面试的范围无所不包：如果你能想到自己的一言一行都将被记录下来并呈现给最终决策者的话，算你聪明。因此，你必须利用和组织各成员每一次交流的机会，强调自身的优势、动机和匹配度。直到你被录用为止。所有的一切都是为了一个目的，那就是获得录用通知。





在一场面试中，自我介绍环节是整个过程的重中之重。
一个好的自我介绍，可以成功地帮助你实现与面试官的“破冰”，形成良好的互动氛围。

❗️对于所有的面试问题都请注意「不要只罗列」，要用事例去证明自己（tell a story)。❗️
请确定你的每一个”论点“都有”论据“支撑.（你说你xxx，你怎么xxx了？你说你能帮我实现xxx，哪看出来的？）


面试终极目的是让面试官从感情上产生 “我喜欢ta/我愿意和这样的人共事”的想法。
也就是说你要有趣不无聊，让人乐意跟你一起呆至少一个小时。
两个专业技能同样优秀的人，如果你是面试官，你肯定也会选性格更好、更有趣、你更喜欢的那个，对吧？


Why don't you tell me a little bit about yourself

要用具体事例向面试官证明
做到了什么 (what have you done)，
学到了什么 (what skills have you gained)，
达成了什么 (what have you achieved)。

















面试的终极目标不是找到最有名的大企业大职位，而是找到跟个人风格、个人优势最匹配的公司和职位。
从这个意义上说，面试中的一切都没有标准答案，问问题也不是为了取悦面试官，“好问题”的标准应该是能够解答你对这个职位最大的疑虑和困惑，只要、且只有真心实意地去把自己跟这份工作做匹配、把自己的职业生涯和这个公司的发展前景放在一起考虑，才能问出好问题来。

如果在笔试以及面试的全程，你都不断地对自己和这个公司、职位做匹配度检测的话，你一定会发现自己有很多信息上的盲区需要补充，所以提问环节真的不能当作个人展示或者客套啊，一定有问题太想问的！










## 面试结果:


如果是终面，你最后可以直接问，「您觉得，这份工作所需的能力，我还有哪些不具备？」有点挑衅是吗？不，我会觉得你很自信。你可以从我的反应，看出你的胜算几何，如果我的反馈里有怀疑，你还有机会弥补！「您可能觉得我没有表现出xXxX能力，其实……(举例，或递补充资料)」 


在回答里说的“我们还会再见面吗？”如果你真想知道，就应该像上面那样翻译一下，九成的面试官会回答的(我也见过一位成都的HR，遮遮掩掩不肯回答）。这就好比你问别人，“你个人总资产多少？”这话立马能惹毛人家；但是，你如果问人家的工作经验、手下的团队规模、毕业学校，这些都不犯忌讳，你再综合一下他就职的公司、行业景气程度，那就能猜个差不多了吧。
























## 自我介绍意义:

我叫xx, 07届 宁波大学 信息与计算科学专业. 应聘IT支持.

之前在艾提公司任职 IT.admin
主要负责 网络 机房 AD域 虚拟机 文件权限.

后来去图书馆自学开发.

自学期间主要 完成了 github 排名第一的 freecodecamp.项目的前端部分.

还看了 哈佛的CS50 CS70 两个系列公开课, 第一次感受到国际名校的魅力.
CS50（Introduction to Computer Science）

后来从零开始编写了一个静态网站. 并获得了三个star.

这几天在学 python爬虫.

总体来说接触的东西非常多,虽然精通的没几个.
但是我相信我可以胜任这份工作.



'' 了解你的技术方向.兴趣爱好而不是基本信息!!!!
'' 
'' 不罗嗦, 挑重点, 说话必须有逻辑.自我介绍主要看你的口语表达能力
'' 经验+能力.
'' 
'' 重点是目前的任职. 以及主要工作职责.
'' 以往工作可以不谈, 面试官有心情自己会问的.
'' 务必记得好好准备自我介绍，并深深刻在脑子里。
'' 
'' 毕业后去了医院当网管,什么都干.
'' 期间医院新入医保, 加了很多班, 也学了很多基础的东西.
'' 用花生壳远程给公司省下不少宽带费.
'' 
'' 艾提提供各种IT服务. 所以能接触到各种设备.还有各方面的人才可以请教问题.
'' FCC: 全球最火的web开发学习平台. 24万 star数量 
'' 
'' 经验归经验. 之前工作培养出什么能力也是很重要的.
'' 	一种是硬件能力:你的知识. 你的证书...
'' 	一种是软件能力:领导能力/管理能力/学习能力/....
'' 
'' 听你一堆废话.面试官已经对你的工作经验和能力有所了解，
'' 但是也许他还没有想到是否要雇用你的问题，因此你需要引导他。这一部分作为总结陈词，
'' 核心目的是要说明，你非常符合这个职位的要求，你就是他们要找的人，同时表明自己对该职位的热情。
'' 
'' 精准但不冗长的自我介绍还有一个好处: 给面试官留下余地，让他可以继续跟你聊天......
'' 
'' 
'' 在这一部分，你可以先说明你对该职位的理解，
'' 然后再将这个职位所需要的能力和你刚才所描述的个人能力相匹配，
'' 从而证明自己是这个职位最合适的人选。
'' 
'' 运维工作就是那么点技术和知识，但是每一点想要做的很深入就不简单了。
'' 
'' 阅读行业相关文档，增加知识量，多阅读别人的经验。
'' 练习英语阅读能力，能熟练掌握英文工作能力。
'' 对当前服务器做详细了解，如果出问题，要第一时间判断故障点。
'' 经常对服务器做备份，并且测试备份是否可用。
'' 经常做健康体检，把服务器当做人看，人会生病，服务器亦会。
'' 掌握最前沿的技术。
'' 
'' 离职前给同事留下了 lantern这个最好用的免费翻墙软件..
'' 
'' 対该职位的理解,  这个职位需要的能力 和 自己所描述的个人能力匹配来证明自己合适.
'' 







## 一面:
可能是hr... 













## 对我们公司的了解

p2p 在线借贷平台. 好像阿里巴巴有投资.
无锡拍拍贷是一家公司....
北京拍拍..

CEO 张俊 
CTO 顾少丰  技术主管. 
都是交通大学的.









## 你的缺点是什么
1. 审美能力不行.
千辛万苦写出来的主题. 人家都说很丑.
后来收集了很多好看的博客.打算有空用到自己网站上...


2. 英语口语稍差,发音不标准.  之前还能看看美剧锻炼下听力. 有需要只能多和老外交流了






'' 这个面试题绝对是我见过最贱最难答的，
'' ‼️注意 这是一道送命题目‼️  一旦没有准备怕是要步步踩雷了。
'' 
'' ‼️坦诚的回答自己几个缺点，但要给出解决办法，一定要避开雷区.‼️
''		你去应聘设计师，说自己最大的缺点是缺乏创新精神
'' 	你去应聘销售，说自己最大的缺点是性格内向，不善言辞
'' 	程序员 说自己 缺乏逻辑性思维. 你是真傻....
'' 比如问你缺点 是为了得到某种信息 
'' 坦诚是不对的 避重就轻是对的。
'' 还有做什么测试，道理都是一样，你要去看测试的目的是什么。
'' 
'' 面对水平在你之上的HR 要谦虚 诚恳 但不用心虚 即使你说的不是实话 也要淡定 即使结果不好 也要淡定的走出去   面对在你之下或和你差不多水平的HR 装逼是王道 扯他或她不知道的 多说点专业词汇 时不时问他或她一句 那个什么你知道吗？ 装逼是让他或她感觉到差距 从而有欣赏的感觉
'' 
'' 
'' 你要是很实诚说：我在某某技术上不足，在以前的工作/学习中没弄明白，争取以后工作中弄懂。”
'' 那你大概要fail了，你这可是直接暴露了你不能胜任某项工作啊！
'' 
'' 或者你想我不说技术上的，就说：“我不太擅长人际关系处理，以后努力锻炼这方面的能力。“
'' 这样说也差不多必挂了，你想，这场面试就是考察你的behavior的能力，你再说你不擅长人际交往。而且在团队合作中最注重的就是交流能力，所以这么答八成是废了。
'' 
'' 这个问题还有一个经典的答案：“我的缺点是我太完美主义了，工作的时候因为追求完美要付出很多额外的精力，blabla…”
'' 其实这么答有一点“投机取巧”，而且面试官大概都知道这个梗。有的面试官会说，“这个不算，重新说一个”。
'' 
'' 
'' 可以说... 审美能力有点差...
'' 
'' 高手: 
'' 先回答一个小缺点. 
'' 进一步. 讲故事.让面试官知道 他是如何克服这个缺点 不断进步的.
'' 面试官问你这个问题. 更想听的是 如何克服自身的不足.提升自己.
'' 
'' “我的一个特点是谨慎，做事三思而后行，你要说这是优点，你可以说稳重，办事牢靠，你要说这是缺点，你可以说我比较保守。”
'' 
'' 
'' 
'' 
'' 
'' 但是相对的不考察干货,发挥空间更广
'' 
'' 无论是问你的优点还是缺点。用具体的事例来陈述。
'' 要将面试官对你性格（个性）的研究转移到你做事流程与方法上。
'' 优点：你做成功一件事情的原因是什么。
'' 缺点：你做失败一件事情的原因是什么。
'' 
'' 记住，性格是很难改变的，做事情的方式与流程是随时可变的。与别人谈自己的性格，永远是巨大的坑。
'' 
'' 这样回答的好处是让招聘者知道：
'' 一、你了解这份工作需要什么样的经验和能力。同时你了解你可能面对什么样的竞争对手。
'' 二、你知道如果弥补自己的缺陷。
'' 三、你有自知之明。就算对方不要你，ta也会欣赏你的坦诚，以后会给你机会。

'' 
'' 当被问到这个问题. 说明面试官对你基本素质个专业能力已经认可了.
'' 才会来考你的性格. 这步答的好就直接给你 offer了.
'' 
'' 这时候 其实自己可以强势一点, 可以把自己的缺点说的 理直气壮.
'' 
'' 『我目前没有特别大的缺点，如果有，而且我自己知道的话，我肯定已经改了。我又不傻。』
'' 
'' 
'' 
'' 因为人像硬币一样都有俩个面，这个问题是面试官想了解除了你明亮光鲜的一面，你的背面是怎样的。而如果你在回答上只会一位的投机取巧，那你之前展现的明亮那一面一面是也会显得虚伪。
'' 
'' 很多时候，候选人说出来的问题就是他真实的缺点。
'' 不自信/社交少.
'' 
'' 对缺点的处理方法:
'' 社交少：没法改正，因为我认为交际花和严谨思维是不可兼得的，一方面是时间有限，另一方面是思维习惯不同。
'' 
'' 
'' ❗️切忌把一个优点包装成缺点。❗️
'' 说出缺点后 应该谈谈如何改进这个缺点.
'' 既然能认识到自己的不足.就应该积极的改变它. 
'' 
'' ❗️千万不能说一个对应聘职位来说是硬伤的缺点。❗️
'' 包括: 社交能力差!!.
'' 
'' 所以无论是优点还是缺点，其实都是在展现自己独一无二的人格和能力特征。一个优点必然带来一个缺点，一个缺点也会带来一个优点。
'' 
'' 比如说 领导能力/合作能力
'' A: 我不会领导他人/我不是一个team player
'' B: 我有时候觉得把任务布置给别人，比自己直接做完更花时间精力
'' 显然，比起回答A，回答B听起来既没有那么致命伤又很真诚像是深入思考过问题本质。
'' 
'' 
'' 其实别人并不是想真正知道你的缺点，
'' 别人只是想知道2点：
'' 第一，是不是很坦率，
'' 第二：自己认不认识自己。
'' 
'' 避免避重就轻，不要谈一个算不得缺点的缺点。
'' 
'' 避免谈非职业缺点，比如有感情洁癖，挑食，
'' 
'' 避免谈到无法改善的弱点，比如我算数必须用计算器
'' 
'' 避免谈到致命弱点，比如脾气怪异不喜欢合作迟到早退等。
'' 
'' 同类滥问题包括：你最大的优缺点，你最大的成就，你最后悔的事，举出一个你说服/领导他人的例子），就算你拿到offer也要好好想一想该不该去，因为他们的招聘如此不认真，文化也不会太好。
'' 
'' 
'' 1）谈已经在改正的缺点／有明确计划来改正的缺点。尤其是你能够充分论证在近期就可以解决的缺点。
'' 
'' 
'' 2）谈一个利用你的优点改正的缺点，顺便带出一个优点。
'' 
'' 
'' 3）很关键的是，谈一个真实的缺点。如果你申请的投行资管咨询等工作，要记得你的面试官就是靠跟人打交道为生的。该条适用于所有面试问题，一定不要在简历上作假，你的赢面不大。正确的做法是选择性介绍你的经历，突出学到／用到关联技能，忽略无关部分。
'' 我听到的比较好的几个包括：1）喜欢追求细节导致项目／作业未能按期完成。通过时间管理能力改变工作方式，先完成框架再改善细节得以解决；2）不知如何拒绝，同事要求帮忙一概揽下，影响自身工作进度。通过多任务处理能力设定优先顺序，以该优先顺序表向求助同事展示自己手上工作，并给其一个自己在何时可以给予帮助的时间估计，让求助人自行决定是否求助，问题解决。






## 你有什么要问我的
这个环节最重要!!!,充分表现你的主动性. 而且还能和面试官拉近距离的好机会

‼️ 必问问题:‼️


同基本的: (程序员/和自己一样的)
	- 这个职位典型的一天是怎么度过的.

中级面试官: (部门主管)
	- 您对这个职位短期的期望是什么.
	- 这个职位最重要的职责是什么？
	- 为了留住优秀人才,公司采取了哪些具体措施.

高级面试官(总监以上,一般是终面才会遇到) 
	与同行内的竞争者相比,贵公司的核心优势在什么地方.


HR: 

	这个岗位以前的那我出了什么变化: 
		裸辞了..那他得有多不开心啊....
		晋升了..  那我以后也能晋升..


‼️可选问题‼️

- 这个职位未来几年的职业发展.
- 为了胜任这个岗位 我还需要学哪些技术
- 刚才某个技术问题 我不太明白. 能解释下么.


‼️忌讳问题‼️

	❗️绝对不能说没问题!!!❗️
		1）主动放弃最后的机会。
		2）可能被认为谋求岗位的意愿不强。
		3）可能被认为对公司和职位准备不够。 4）可能会被认为应变力不够。


	❗️提问过于高深的问题❗️
		1)面试官招架不住，引起尴尬。
		2）给人好高骛远的感觉

	❗️对其他岗位有兴趣❗️
		1)可能被认为职业规划缺失
		2)可能被认为职业稳定性不佳
		3)容易导致顾此失彼

- 忌连续问三个问题以上
- 基础岗位求职者忌装X：公司有什么战略考虑、规划？
- 是否有加班费, 一年几次外出旅游等等....
- 网上能搜到的也别问.
- 规则制度 上下班时间 这种东西. 只能和HR谈薪水时候问. 不要问别的面试官.


'' 
'' 
'' 
'' 如何评估员工在试用期内的表现, 考核标准是什么.
'' 
'' 公司有什么措施 来保证员工的成长.
'' 
'' 这个职位发展前景怎样. 有何种晋升机制.
'' 什么条件下才能地带晋升机会.
'' 
'' 
'' 您当初选择这家公司的原因是什么. 在工作一段时间后,您是如何评价这家公司的.
'' 这家公司有什么 优点和缺点.
'' 
'' 
'' 
'' 
'' 
'' 
'' 
'' 问问题和回答问题一样. 也是能考察应聘者本身的.
'' ‼️聪明的人 第一个标志就是善于提问. 如果你的问题很Low,面试官对你的评价不会好‼️
'' 
'' 
'' “面试是一种双向的沟通，所以，我回答之后，也会想知道，您本人和贵公司最大的缺点各是什么，请不要回避。可以的话，我就说了噢？” 
'' 
'' 
'' 
'' ‼️你们双方在签合同之前是完全平等的，从形式上到内容上......‼️
'' ‼️你有权利进行提问.对方有义务回答你.如果对方没让你提问，你有权理直气壮地争取！‼️
'' 越是好的公司, 越尊重你提问的权利.
'' 好的公司一定有规矩. 规定面试时候 要让面试者提问.
'' 面试官让你提问 并且回答你的问题 是对公司规矩的遵循和尊重
'' 为什么一定要回答你呢.  你千里迢迢过来面试.并且回答了一些列问题. 他也必须回答你的问题.
'' 
'' 无论今后是陌路还是从此给公司做牛做马，你们双方在签合同之前是完全平等的，从形式上到内容上。
'' 为了这种平等，面试官真心认为自己有义务回答你。如果对方没有给你这种平等待遇.

‼️千万别问太LOW的问题，那样会让你显得格局很小。‼️


'' 
'' 在求职压力大的环境下, 不要认为给offer就很幸运了, 这种想法是错误的.
'' 考察公司是一个非常重要的环境. 公司选的不对 对职业生涯有很多负面影响.
'' 你可以根据面试官回答的好坏. 来判断这家公司的综合素质. 以及对人才的态度!
'' 面试选择是双向的. 你有选择权.




聪明人让别人最舒服的一点: 让你无序顾及他们的自尊心,
让别人最可怕的一点，就是你那点小心思小伎俩他早看穿了。
你用弱势的态度自居，采取小心翼翼的态势，

问些不痛不痒的问题，是无法得分的。所以，你得表现啊，怎么表现？
常规动作做完了，你还有自选动作啊！
"请问......"，“我想了解.......”，“如果......”

有了和面试官面对面的机会. 而且还主动让你提问.
居然不想知道详细的、切身利益相关的、在公司网站和大众媒体无法获知的情况？？
你脑子一定抽了，要不就是你根本就不重视这次面试，来广种薄收的？所以，我决定不录用你，请务必理解哦，谢谢您的时间，出门右转是电梯。

提问 一定要诚恳,
根据“表现出诚恳”的建议，你的行为会是”装诚恳“，装的前提就是，你认为自己比别人聪明，这在正式场合已经是极大的冒犯，信不信我转头就跟人力资源部说砍了你？ 

另外一个角度，如果你真的重视自己，认为自己就是能给雇主带来非同一般的价值，那我们这次面试就是探讨未来合作的可能性，我们是平等的，我也投入，你也投入，赌一个将来。这种关乎将来命运的事，请拿出你对爱情的真挚来好吗？当然，我就知道你做不到----因为你根本没有这么重视自己，你知道，自己没有那么重要。我在等那个重要的人，请你走开吧


真挚的爱情是怎样的？一定是考虑对方的感受，观察考虑对方的需求，对吗？类似地，在面试中，如果你问了如下的问题，我会意识到你真的在替我着想：
“部门/公司期望我的加入带来哪些改变？” (当然，这至少是要带团队的职位才能这样问) “您经常需要到南方出差，哪些紧急情况我应该立刻联系您？”(你应聘助理的话，要多为上司考虑)


你不是想知道培训进修机会吗？「请问您部门里为员工进行过哪些培训？」「请问之前给员工报销过哪些学费？」「请问公司之前有多少人去过总部学习？」


注意，尽量问过往事实，不要问方针原则、企业价值观下的职业情景，例如
@Wong Vincent
说的「这个职位未来的发展空间或晋升途径是什么？」 ，因为这类问题的解释权在对方，误导你了也不算作假；而就事实给你虚假答案，会让面试官有心理负担，如果他说谎了，就会有点不自然，你可以看出来。 



## 职业规划
技术只有两条归宿. 一个就是专心做技术.一个就是管理.
我选择技术. 
目前来说, 先学好python 然后把自己的所有知识重新整理一遍.
再决定下一步计划.

'' 架构:
'' 	一种比较通俗的说法是“最高层次的规划，难以改变的决定”，
'' 	这些规划和决定奠定了事物未来发展的方向和最终的蓝图。
'' 
'' 	从这个意义上说，人生规划也是一种架构。
'' 选什么学校、学什么专业、进什么公司、找什么对象，过什么样的生活，都是自己人生的架构。
'' 
'' 
'' 我认为 IT支持最重要的就是 保证 服务器安全,网络稳定;  及时数据备份.以及权限管理.


















# 面试/技能 总结

## 简介
面试: 考察你的能力: 逻辑思维, 沟通能力, 学习能力. 抗压能力.
‼️学会处理复杂的人事关系,学会用各种政治手段.‼️

‼️学习:关键是会得『偷』, 偷了会得 改,改了会得发,发则通矣。‼️

发现问题  &  记录错误信息及解决办法   &  定期整理

高可用运维. 平时的故障演习很重要!!!!!

## 开放性提问

有些问题没有确切的答案. 这就是为了测试技术的广度和深度.和问题分析思维

先看错误提示  
→ 再看 log 日志文件. 
→ 查询谷歌. 

如果出现xxx情况 你会怎么处理.
如果网站无法访问. 哪些方面定位问题源头
如果服务器突然很卡: 怎么定位系统瓶颈.
如果上不去网络 . 怎么定位问题.


## 个人素质

高效的学习能力.
解决问题的能力.
帮人解决问题.
被人所依赖!


- 平常心: 面试时候谈架构/大数据.其实90%时间都是很基础的东西
- 监控意识非常重要.
- 偷懒的心: 能用脚本坚决用脚本.能自动化必须自动化.
- 记录分析意识		分析程序不正常运行的原因.

细心: 任何操作 都要再三确认.
学习: 遇到问题要记录.分享


大量优秀的开源系统/平台不断涌现，解决原来低效的运维工作，降低运维成本，
因此，作为一名运维工程师，对开源软件的学习应该成为基本的技能之一；



## 面试流程

一般是2-3轮技术面试＋一轮HR面试

一面官通常是个资深或者高级程序员
	通常聊的久一点，30－60分钟，他会根据你的笔试题聊一聊，数据结构和算法，捎带着聊一下经历，找找共同点。

二面官通常是直接领导
	聊30-60分钟左右，一是看你的项目，项目担任的角色，通用的工具，解决问题的思路，问一些算法，还有看看你的智商情商。

三面官通常是交叉部门面试或者部门技术负责人，
	通常聊的时间比较短，15-30分钟，技术不会聊太多，主要就聊之前的项目，解决过的问题，你对技术的看法和对新技术的追求，然后看看这个人是否浮躁，是否能培养，给你下标签，给你树立威信。

HR通常聊15-30分钟，
主要关注你的离职原因，
求职动机以及薪资期望，
最好在面试前把这三个问题都想清楚，以防在面试时逻辑混乱，
或者没有把自己的真实想法表达清楚而后续陷入被动。
答案要诚恳且中立，表现出你的价值，给到对方你的诚意。



‼️STAR原则‼️
是阿里HR最喜欢提的一点，也是内部面试官反复强调的原则。
S是Situation（场景）、
T是Task（任务）、
A是Action（行动）
R是Result（结果），
这是描述完整案例的方法论。












# Skilles

负载均衡
冷备
热备
高可用
异地容灾
故障监控
确保备份可用
避免单点


知道各类型的服务器:塔式,机架式,刀片式


远程工具: RDP/VNC/Jumpmydesktop … 
Log 日志分析
磁盘分区:fdisk / parted 

用户管理 文件系统管理




## Linux 方面

Centos debian(kali) Ubuntu




## 网络服务

公司最关键的绝对是web服务器.
nginx 和 apache 必须熟悉.特别是 nginx.


## 脚本方面
shell + python/perl/php 中的一个.

shell 必须.至少能写出系统管理的脚本.
最简单也得写个 监控cpu. 内存比例的脚本.
写系统脚本 才最有意义.



## 文本处理命令
sort , tr , cut, paste, uniq, tee等必学：Linux运维工程师视频课程（系统命令）


## 数据库

首选MySQL，因为linux用得最多绝对是MySQL，增删改查必学，特别要学熟查，运维人员

## 防火墙
不学不行，防火墙也算是个难点，最重要弄懂规则，如果学过CCNA的朋友可能会比较好学，因为iptables也有NAT表，原理是一样的，而FILTER表用得最多，反正不学就肯定不合格。

## 监控工具
最好学这3个：cacti，nagios，zibbix，企业用得最多应该是nagios和 zibbix。

## 集群和热备
集群工具有很多，最好学是LVS，这是必学，最好也学学nginx集群，反向代理，还有热备，这个就更多工具能实现了。


## 数据备份
至少要把RAID的原理弄懂，特别是企业最常用的1+0或0+1，自己做实验也要弄出来，备份工具有很多，如tar, dump, rsync等，最好多了解一下。建议先学熟shell，等工作后再学另一门脚本语言，这样会比较好。





## 网络

路由交换



- <<TCP/IP 协议详解>> 
- 熟练使用 Wireshark / tcpdump 等抓包工具






## 安全方面

信息安全 逛乌云


- 任何操作 最好先搞明白原理.


复杂操作:
先写详细计划文档. 细致到每个命令.请人审核


加密工具储存密码: ipassword
truecrypt

本地存储,不用网盘.
SSH 私钥添加密码.

遇到报警 第一时间处理  不要等别人.
无法处理 找同事帮忙.不能拖....





## 云计算 / docker

也许基于运维工程师对CDN这个杠杆的应用，就可以帮公司省掉几千万的带宽成本；
也许基于云计算架构这个杠杆的运用，通过混和部署，可以帮公司省掉几千万的服务器成本；










