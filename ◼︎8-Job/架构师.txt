🔸 职业发展
    程序员只有三种: 专精技术 / 转型管理 / 晋升架构师

    网管 ➜ devops ➜ ➜ 全栈 ➜ 架构师 ➜ CTO


🔸 技术
    广度 + 深度.  
    广度已有, 找个方向深入.


🔸 成长 

    对新技术发自内心的喜爱和好奇，对自己产品和代码的尊重与自豪

    从用户需求出发找到最适合的技术（即使是非时髦技术）解决问题.

    帮助他人成功，是自己成功的最佳路径。




🔸 CTO 
    Chief Technology Officer  首席技术官
    公司技术发展路线的制定、技术方向研究和总体规划，制定和实施重大产品技术决策。

    CTO负责文化， 人，技术和业务之间的平衡
    架构师负责把需求变成灵活的，可靠的，可扩展的软件架构。


🔸 架构师 
    普通架构师: 普通岗位, 看起来高上大,实际更多的是 防止掉坑, 补坑的活.
    
    首席架构师: 有着极为重要的地位，是团队的关键人物，担当着重责.
        一名架构师必须能够写出他亲自设计的系统中最难以实现的那段核心代码，
        种出主干和枝干，才能将"冒芽开花结果"的重担交给开发团队来做。

    架构师也分种类的, 基础架构师/系统架构师/java 架构师....

    大多数都是在工作十年后再从程序员转型为架构师，
    几乎所有高薪架构师，都懂得多门主流编程语言如C++、Java、python等，才能在架构系统时没有局限性，
    也可以使用如MySQL、sqlserver、sybase、jracle、infomix等多种数据库，
    他们还了解文件系统特性，如NFS、GFS，NTDFS、XFS等，
    甚至做过几年windows开发，是这些经历，才造就了一名优秀的架构师。




🔸 架构师 素质


⦿ 超强的分析、设计能力
    不管怎样，具备很强的分析和设计能力都是必杀技。


⦿ 架构设计的实力
    能为原始需求提供架构方案。 
    考虑周全：工具和框架的采用、安全性、性能和扩展性、依赖关系、集成、效益。 
    熟悉软件开发生命周期（SDLC）：需求、分析、设计、测试、打包、部署。 


⦿ 架构框架
    能证明架构的可行性，包括其业务、应用、数据、基础设置方面。 


⦿ 布道
    能讲解该行业的市场、技术知识。 
    能为全队提供培训课程。



